# Default values for front-end.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: gambhir/supabase-onfly
  # Overrides the image tag whose default is the chart appVersion.
  tag: 96ad167
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# envFromSecret: my-secret
env:
  - name: NEXT_PUBLIC_SUPABASE_URL
    valueFrom:
      secretKeyRef:
        name: my-secret
        key: NEXT_PUBLIC_SUPABASE_URL
  - name: NEXT_PUBLIC_SUPABASE_ANON_KEY
    valueFrom:
      secretKeyRef:
        name: my-secret
        key: NEXT_PUBLIC_SUPABASE_ANON_KEY
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  name: nextjs-svc
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: 
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  rules:
  - http:
      paths:
      - backend:
          service:
            name: front-end 
            port:
              number: 80
        path: /
        pathType: Prefix  


  # hosts:
  #   - host: onfly.gambhir.dev
  #     paths:
  #       - path: /
  #         pathType: Prefix

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #     - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# TODO: Learn about this LivenessProbe 
livenessProbe:
  httpGet:
    path: /
    # IMPORTANT: The probe port should be the container's port, not the service port.
    # Often, Helm templates use the 'http' port named in the Deployment, which should be 3000.
    # If your template refers to it by number, it should be 3000.
    # Ensure your Next.js app serves a `/` endpoint for health checks.
    port: 3000 # CHANGED: From 'http' to 3000. Explicitly set the port to 3000, which is the actual port your Next.js application listens on inside the container.
  initialDelaySeconds: 10 # ADDED: A delay to give the container time to start up before checking.
  periodSeconds: 5 # ADDED: How often to perform the check.
  timeoutSeconds: 3 # ADDED: How long to wait for a response from the probe.
  failureThreshold: 3 # ADDED: How many consecutive failures before the probe is considered failed.
readinessProbe:
  httpGet:
    path: /
    port: 3000 # CHANGED: From 'http' to 3000. Same reason as liveness probe.
  initialDelaySeconds: 5 # ADDED: A delay to give the container time to start up before checking.
  periodSeconds: 5 # ADDED: How often to perform the check.
  timeoutSeconds: 3 # ADDED: How long to wait for a response from the probe.
  failureThreshold: 3 # ADDED: How many consecutive failures before the probe is considered failed.

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
